name: Build and Package for ArchLinux

on:
  push:
    branches: [ "main" ]  # 在 main 分支推送时也触发（测试用）
    tags: [ "v*" ]        # 正式发布时用 tags
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # ---------- 1. 初始化 ----------
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 关键：获取完整 Git 历史记录

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Generate go.sum
        run: go mod tidy

      # ---------- 2. 构建二进制 ----------
      - name: Build Binary
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w" -o hiwifi-ssh-launcher main.go
          upx --best --lzma hiwifi-ssh-launcher

      # ---------- 3. 安装 ArchLinux 工具链 ----------
      - name: Install ArchLinux Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            binutils \
            fakeroot \
            file \
            gettext \
            grep \
            gawk \
            sed \
            curl \
            libarchive-tools  # 提供 bsdtar（makepkg 依赖）

          # 模拟 makepkg 环境（无需完整 pacman）
          curl -L https://github.com/archlinux/archlinux-container/raw/main/rootfs/usr/bin/makepkg -o /tmp/makepkg
          chmod +x /tmp/makepkg
          sudo mv /tmp/makepkg /usr/bin/

      # ---------- 4. 生成 PKGBUILD（兼容无tag情况） ----------
      - name: Create PKGBUILD
        run: |
          # 如果无 tag，使用默认版本号 0.0.1
          if ! APP_VERSION=$(git describe --tags --abbrev=0 2>/dev/null | sed 's/^v//'); then
            APP_VERSION="0.0.1"
          fi

          APP_NAME="hiwifi-ssh-launcher"
          GIT_HASH=$(git rev-parse --short HEAD)

          cat <<EOF > PKGBUILD
          pkgname=$APP_NAME
          pkgver=$APP_VERSION
          pkgrel=1
          pkgdesc="SSH Launcher for HiWiFi (Git commit: $GIT_HASH)"
          arch=('x86_64')
          license=('MIT')
          provides=('$APP_NAME')
          source=("$APP_NAME-\${pkgver}.tar.gz::https://github.com/\${USERNAME}/$APP_NAME/archive/v\${pkgver}.tar.gz")
          sha256sums=('SKIP')

          build() {
            cd "\$pkgname-\$pkgver"
            GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o \$pkgname main.go
          }

          package() {
            install -Dm755 "\$srcdir/\$pkgname-\$pkgver/\$pkgname" "\$pkgdir/usr/bin/\$pkgname"
          }
          EOF

          # 生成 .SRCINFO
          /usr/bin/makepkg --printsrcinfo > .SRCINFO

      # ---------- 5. 构建软件包 ----------
      - name: Build Package
        run: |
          /usr/bin/makepkg -s --noconfirm SKIPCHECKSUMS SKIPPGPCHECK

      # ---------- 6. 上传产物 ----------
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: |
            hiwifi-ssh-launcher
            *.pkg.tar.zst
            PKGBUILD
            .SRCINFO
