name: Build and Package for ArchLinux

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # ---------- 1. 初始化 ----------
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      # ---------- 2. 构建二进制 ----------
      - name: Build Binary
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o hiwifi-ssh-launcher .
          strip hiwifi-ssh-launcher

      # ---------- 3. 使用Docker容器构建Arch包 ----------
      - name: Build Arch Package using Docker
        run: |
          # 准备版本号
          VERSION=${GITHUB_REF#refs/tags/v}
          [ -z "$VERSION" ] || [ "$VERSION" = "$GITHUB_REF" ] && VERSION="0.0.1"
          
          # 创建伪源包
          mkdir -p "hiwifi-ssh-launcher-$VERSION"
          cp -r * "hiwifi-ssh-launcher-$VERSION"/ || true
          tar -czf "hiwifi-ssh-launcher-$VERSION.tar.gz" "hiwifi-ssh-launcher-$VERSION"
          
          # 准备PKGBUILD
          cat <<EOF > PKGBUILD
          pkgname=hiwifi-ssh-launcher
          pkgver=$VERSION
          pkgrel=1
          pkgdesc="SSH Launcher for HiWiFi"
          arch=('x86_64')
          license=('MIT')
          source=("\$pkgname-\$pkgver.tar.gz")
          sha256sums=('SKIP')

          build() {
            cd "\$pkgname-\$pkgver"
            go build -ldflags="-s -w" -o \$pkgname .
          }

          package() {
            install -Dm755 "\$srcdir/\$pkgname-\$pkgver/\$pkgname" "\$pkgdir/usr/bin/\$pkgname"
          }
          EOF
          
          # 使用Docker中的archlinux构建
          docker run --rm -v $(pwd):/build -w /build archlinux:latest bash -c "
            pacman -Sy --noconfirm base-devel &&
            chmod a+rw . &&
            makepkg -s --noconfirm SKIPCHECKSUMS SKIPPGPCHECK
          "

      # ---------- 4. 上传产物 ----------
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: |
            hiwifi-ssh-launcher
            *.pkg.tar.zst
