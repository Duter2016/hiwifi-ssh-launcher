name: Build and Release for ArchLinux

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 设置Go环境
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'
          cache: true

      # 3. 编译二进制文件
      - name: Build binary
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o hiwifi-ssh-launcher .
          strip hiwifi-ssh-launcher

      # 4. 准备ArchLinux打包文件
      - name: Prepare Arch package
        run: |
          # 创建打包目录
          mkdir -p pkg-build
          cp hiwifi-ssh-launcher pkg-build/
          
          # 自动获取版本号
          VERSION=${GITHUB_REF#refs/tags/v}
          [ -z "$VERSION" ] && VERSION="0.1.0"
          
          # 生成PKGBUILD文件
          cat > pkg-build/PKGBUILD <<EOF
pkgname=hiwifi-ssh-launcher
pkgver=$VERSION
pkgrel=1
pkgdesc="SSH Launcher for HiWiFi routers"
arch=('x86_64')
license=('MIT')

package() {
  install -Dm755 "\$srcdir/hiwifi-ssh-launcher" "\$pkgdir/usr/bin/hiwifi-ssh-launcher"
}
EOF

      # 5. 使用Docker容器构建Arch包
      - name: Build Arch package
        run: |
          cd pkg-build
          docker run --rm -v $(pwd):/build -w /build archlinux:latest bash -c "
            echo 'Server = https://mirrors.ustc.edu.cn/archlinux/\$repo/os/\$arch' > /etc/pacman.d/mirrorlist
            pacman -Sy --noconfirm base-devel &&
            makepkg -s --noconfirm
          "
          cp *.pkg.tar.zst ..

      # 6. 上传制品
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: hiwifi-ssh-launcher
          path: |
            hiwifi-ssh-launcher
            *.pkg.tar.zst
