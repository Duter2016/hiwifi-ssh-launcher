name: Build and Package for ArchLinux

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # ---------- 1. 初始化 ----------
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Generate go.sum
        run: go mod tidy

      # ---------- 2. 构建二进制 ----------
      - name: Build Binary
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w" -o hiwifi-ssh-launcher main.go
          upx --best --lzma hiwifi-ssh-launcher

      # ---------- 3. 安装打包工具 ----------
      - name: Install Packaging Tools
        run: |
          # 安装基础工具
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            binutils \
            fakeroot \
            file \
            sed \
            gawk \
            grep \
            libarchive-tools
          
          # 安装精简版 makepkg
          curl -sL https://gist.githubusercontent.com/Duter2016/abc123abc123/raw/makepkg-lite.sh -o /tmp/makepkg
          chmod +x /tmp/makepkg
          sudo mv /tmp/makepkg /usr/bin/

      # ---------- 4. 生成 PKGBUILD ----------
      - name: Create PKGBUILD
        run: |
          # 获取版本号（默认0.0.1）
          if ! APP_VERSION=$(git describe --tags --abbrev=0 2>/dev/null | sed 's/^v//'); then
            APP_VERSION="0.0.1"
          fi
          
          APP_NAME="hiwifi-ssh-launcher"
          GIT_HASH=$(git rev-parse --short HEAD)
          
          cat <<EOF > PKGBUILD
          pkgname=$APP_NAME
          pkgver=$APP_VERSION
          pkgrel=1
          pkgdesc="SSH Launcher for HiWiFi (Git commit: $GIT_HASH)"
          arch=('x86_64')
          license=('MIT')
          provides=('$APP_NAME')
          source=("${APP_NAME}-\${pkgver}.tar.gz")
          sha256sums=('SKIP')

          build() {
            cd "\${pkgname}-\${pkgver}"
            GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o \${pkgname} main.go
          }

          package() {
            install -Dm755 "\${srcdir}/\${pkgname}-\${pkgver}/\${pkgname}" "\${pkgdir}/usr/bin/\${pkgname}"
          }
          EOF
          
          # 创建伪源代码包
          tar -czf "${APP_NAME}-${APP_VERSION}.tar.gz" --transform "s,^,${APP_NAME}-${APP_VERSION}/," *

      # ---------- 5. 构建软件包 ----------
 uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: |
            hiwifi-ssh-launcher
            *.pkg.tar.zst
            PKGBUILD
            .SRCINFO
